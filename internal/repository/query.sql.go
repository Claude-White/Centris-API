// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: query.sql

package repository

import (
	"context"
)

const getAllProperties = `-- name: GetAllProperties :many
SELECT id, title, civic_number, street_name, appartment_number, city_name, neighbourhood_name, price, description, bedroom_number, room_number, bathroom_number, longitude, latitude FROM property
LIMIT $1 OFFSET $2
`

type GetAllPropertiesParams struct {
	Limit  int32
	Offset int32
}

func (q *Queries) GetAllProperties(ctx context.Context, arg GetAllPropertiesParams) ([]Property, error) {
	rows, err := q.db.Query(ctx, getAllProperties, arg.Limit, arg.Offset)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Property
	for rows.Next() {
		var i Property
		if err := rows.Scan(
			&i.ID,
			&i.Title,
			&i.CivicNumber,
			&i.StreetName,
			&i.AppartmentNumber,
			&i.CityName,
			&i.NeighbourhoodName,
			&i.Price,
			&i.Description,
			&i.BedroomNumber,
			&i.RoomNumber,
			&i.BathroomNumber,
			&i.Longitude,
			&i.Latitude,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
