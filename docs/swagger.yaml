definitions:
  repository.Broker:
    properties:
      agency_address:
        type: string
      agency_logo:
        type: string
      agency_name:
        type: string
      complementary_info:
        type: string
      corporation_name:
        type: string
      created_at:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      middle_name:
        type: string
      presentation:
        type: string
      profile_photo:
        type: string
      served_areas:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  repository.GetAllAgencyPropertiesParams:
    properties:
      agency_name:
        type: string
      number_of_items:
        type: integer
      start_position:
        type: integer
    type: object
  repository.GetAllBrokerPropertiesParams:
    properties:
      broker_id:
        type: integer
      number_of_items:
        type: integer
      start_position:
        type: integer
    type: object
  repository.GetAllBrokersParams:
    properties:
      agency:
        type: string
      area:
        type: string
      first_name:
        type: string
      language:
        type: string
      last_name:
        type: string
      middle_name:
        type: string
      number_of_items:
        type: integer
      start_position:
        type: integer
    type: object
  repository.GetAllCategoryPropertiesParams:
    properties:
      category:
        type: string
      number_of_items:
        type: integer
      start_position:
        type: integer
    type: object
  repository.GetAllCityPropertiesParams:
    properties:
      city_name:
        type: string
      number_of_items:
        type: integer
      start_position:
        type: integer
    type: object
  repository.GetAllPropertiesParams:
    properties:
      number_of_items:
        type: integer
      start_position:
        type: integer
    type: object
  repository.GetAllRadiusPropertiesParams:
    properties:
      latitude:
        type: number
      longitude:
        type: number
      number_of_items:
        type: integer
      radius:
        type: number
      start_position:
        type: integer
    type: object
  repository.GetPropertyByCoordinatesParams:
    properties:
      latitude:
        type: number
      longitude:
        type: number
      number_of_items:
        type: integer
      start_position:
        type: integer
    type: object
  repository.Property:
    properties:
      address:
        type: string
      bathroom_number:
        type: integer
      bedroom_number:
        type: integer
      category:
        type: string
      city_name:
        type: string
      created_at:
        type: string
      description:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      mls:
        description: MLS number
        type: integer
      price:
        type: number
      room_number:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
info:
  contact: {}
  title: Swagger Centris API
  version: "0.1"
paths:
  /brokers:
    post:
      consumes:
      - application/json
      description: Retrieves a list of brokers with pagination
      parameters:
      - description: Pagination parameters
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/repository.GetAllBrokersParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/repository.Broker'
            type: array
        "400":
          description: Invalid request body
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get all brokers
      tags:
      - Brokers
  /brokers/{brokerId}:
    get:
      consumes:
      - application/json
      description: Retrieves broker details using the provided broker number
      parameters:
      - description: Broker number
        in: path
        name: brokerId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repository.Broker'
        "400":
          description: Invalid broker number
          schema:
            type: string
        "404":
          description: Broker not found
          schema:
            type: string
        "500":
          description: Failed to get broker
          schema:
            type: string
      summary: Get broker by broker number
      tags:
      - Brokers
  /properties:
    post:
      consumes:
      - application/json
      description: Retrieves a list of properties with pagination
      parameters:
      - description: Pagination parameters
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/repository.GetAllPropertiesParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/repository.Property'
            type: array
        "400":
          description: Invalid request body
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get all properties
      tags:
      - Properties
  /properties/{mls}:
    get:
      consumes:
      - application/json
      description: Retrieves property details using the provided MLS number
      parameters:
      - description: MLS number
        in: path
        name: mls
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repository.Property'
        "400":
          description: Invalid MLS number
          schema:
            type: string
        "404":
          description: Property not found
          schema:
            type: string
        "500":
          description: Failed to get property
          schema:
            type: string
      summary: Get property by MLS number
      tags:
      - Properties
  /properties/agency:
    post:
      consumes:
      - application/json
      description: Retrieves a list of properties for a specific agency with pagination
      parameters:
      - description: Pagination parameters
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/repository.GetAllAgencyPropertiesParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/repository.Property'
            type: array
        "400":
          description: Invalid agency name or request body
          schema:
            type: string
        "404":
          description: Agency properties not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get all properties by agency
      tags:
      - Properties
  /properties/broker:
    post:
      consumes:
      - application/json
      description: Retrieves a list of properties for a specific broker with pagination
      parameters:
      - description: Pagination parameters
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/repository.GetAllBrokerPropertiesParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/repository.Property'
            type: array
        "400":
          description: Invalid broker ID or request body
          schema:
            type: string
        "404":
          description: Broker properties not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get all properties by broker
      tags:
      - Properties
  /properties/category:
    post:
      consumes:
      - application/json
      description: Retrieves a list of properties for a specific category with pagination
      parameters:
      - description: Pagination parameters
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/repository.GetAllCategoryPropertiesParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/repository.Property'
            type: array
        "400":
          description: Invalid category name or request body
          schema:
            type: string
        "404":
          description: Category properties not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get all properties by category
      tags:
      - Properties
  /properties/city:
    post:
      consumes:
      - application/json
      description: Retrieves a list of properties for a specific city with pagination
      parameters:
      - description: Pagination parameters
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/repository.GetAllCityPropertiesParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/repository.Property'
            type: array
        "400":
          description: Invalid city name or request body
          schema:
            type: string
        "404":
          description: City properties not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get all properties by city
      tags:
      - Properties
  /properties/coordinates:
    post:
      consumes:
      - application/json
      description: Retrieves a property based on latitude and longitude
      parameters:
      - description: Coordinates parameters
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/repository.GetPropertyByCoordinatesParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repository.Property'
        "400":
          description: Invalid request body
          schema:
            type: string
        "404":
          description: Property not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get a property by coordinates
      tags:
      - Properties
  /properties/radius:
    post:
      consumes:
      - application/json
      description: Retrieves a list of properties for a specific radius with pagination
      parameters:
      - description: Pagination parameters
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/repository.GetAllRadiusPropertiesParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/repository.Property'
            type: array
        "400":
          description: Invalid radius or request body
          schema:
            type: string
        "404":
          description: Properties not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get all properties by radius
      tags:
      - Properties
swagger: "2.0"
