{
    "swagger": "2.0",
    "info": {
        "title": "Swagger Centris API",
        "contact": {},
        "version": "0.1"
    },
    "paths": {
        "/brokers": {
            "post": {
                "description": "Retrieves a list of brokers with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Brokers"
                ],
                "summary": "Get all brokers",
                "parameters": [
                    {
                        "description": "Pagination parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/repository.GetAllBrokersParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/repository.Broker"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/brokers/{brokerId}": {
            "get": {
                "description": "Retrieves broker details using the provided broker number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Brokers"
                ],
                "summary": "Get broker by broker number",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Broker number",
                        "name": "brokerId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/repository.Broker"
                        }
                    },
                    "400": {
                        "description": "Invalid broker number",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Broker not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to get broker",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/properties": {
            "post": {
                "description": "Retrieves a list of properties with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Properties"
                ],
                "summary": "Get all properties",
                "parameters": [
                    {
                        "description": "Pagination parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/repository.GetAllPropertiesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/repository.Property"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/properties/agency": {
            "post": {
                "description": "Retrieves a list of properties for a specific agency with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Properties"
                ],
                "summary": "Get all properties by agency",
                "parameters": [
                    {
                        "description": "Pagination parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/repository.GetAllAgencyPropertiesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/repository.Property"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid agency name or request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Agency properties not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/properties/broker": {
            "post": {
                "description": "Retrieves a list of properties for a specific broker with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Properties"
                ],
                "summary": "Get all properties by broker",
                "parameters": [
                    {
                        "description": "Pagination parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/repository.GetAllBrokerPropertiesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/repository.Property"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid broker ID or request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Broker properties not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/properties/category": {
            "post": {
                "description": "Retrieves a list of properties for a specific category with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Properties"
                ],
                "summary": "Get all properties by category",
                "parameters": [
                    {
                        "description": "Pagination parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/repository.GetAllCategoryPropertiesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/repository.Property"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid category name or request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Category properties not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/properties/city": {
            "post": {
                "description": "Retrieves a list of properties for a specific radius with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Properties"
                ],
                "summary": "Get all properties by radius",
                "parameters": [
                    {
                        "description": "Pagination parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/repository.GetAllCityPropertiesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/repository.Property"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid radius or request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Properties not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/properties/radius": {
            "post": {
                "description": "Retrieves a property based on latitude and longitude",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Properties"
                ],
                "summary": "Get a property by coordinates",
                "parameters": [
                    {
                        "description": "Coordinates parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/repository.GetPropertyByCoordinatesParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/repository.Property"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Property not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/properties/{mls}": {
            "get": {
                "description": "Retrieves property details using the provided MLS number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Properties"
                ],
                "summary": "Get property by MLS number",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "MLS number",
                        "name": "mls",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/repository.Property"
                        }
                    },
                    "400": {
                        "description": "Invalid MLS number",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Property not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to get property",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "repository.Broker": {
            "type": "object",
            "properties": {
                "agency_address": {
                    "type": "string"
                },
                "agency_logo": {
                    "type": "string"
                },
                "agency_name": {
                    "type": "string"
                },
                "complementary_info": {
                    "type": "string"
                },
                "corporation_name": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "middle_name": {
                    "type": "string"
                },
                "presentation": {
                    "type": "string"
                },
                "profile_photo": {
                    "type": "string"
                },
                "served_areas": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "repository.GetAllAgencyPropertiesParams": {
            "type": "object",
            "properties": {
                "agency_name": {
                    "type": "string"
                },
                "number_of_items": {
                    "type": "integer"
                },
                "start_position": {
                    "type": "integer"
                }
            }
        },
        "repository.GetAllBrokerPropertiesParams": {
            "type": "object",
            "properties": {
                "broker_id": {
                    "type": "integer"
                },
                "number_of_items": {
                    "type": "integer"
                },
                "start_position": {
                    "type": "integer"
                }
            }
        },
        "repository.GetAllBrokersParams": {
            "type": "object",
            "properties": {
                "agency": {
                    "type": "string"
                },
                "area": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "middle_name": {
                    "type": "string"
                },
                "number_of_items": {
                    "type": "integer"
                },
                "start_position": {
                    "type": "integer"
                }
            }
        },
        "repository.GetAllCategoryPropertiesParams": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "number_of_items": {
                    "type": "integer"
                },
                "start_position": {
                    "type": "integer"
                }
            }
        },
        "repository.GetAllCityPropertiesParams": {
            "type": "object",
            "properties": {
                "city_name": {
                    "type": "string"
                },
                "number_of_items": {
                    "type": "integer"
                },
                "start_position": {
                    "type": "integer"
                }
            }
        },
        "repository.GetAllPropertiesParams": {
            "type": "object",
            "properties": {
                "number_of_items": {
                    "type": "integer"
                },
                "start_position": {
                    "type": "integer"
                }
            }
        },
        "repository.GetPropertyByCoordinatesParams": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            }
        },
        "repository.Property": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "bathroom_number": {
                    "type": "integer"
                },
                "bedroom_number": {
                    "type": "integer"
                },
                "category": {
                    "type": "string"
                },
                "city_name": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "mls": {
                    "description": "MLS number",
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "room_number": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    }
}